import {
  __commonJS
} from "./chunk-S5KM4IGW.js";

// node_modules/detect-node/browser.js
var require_browser = __commonJS({
  "node_modules/detect-node/browser.js"(exports, module) {
    module.exports = false;
  }
});

// node_modules/basic-timer/node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/basic-timer/node_modules/ms/index.js"(exports, module) {
    var s = 1e3;
    var m = s * 60;
    var h = m * 60;
    var d = h * 24;
    var y = d * 365.25;
    module.exports = function(val, options) {
      options = options || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse(val);
      } else if (type === "number" && isNaN(val) === false) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(val));
    };
    function parse(str) {
      str = String(str);
      if (str.length > 1e4) {
        return;
      }
      var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "days":
        case "day":
        case "d":
          return n * d;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      if (ms >= d) {
        return Math.round(ms / d) + "d";
      }
      if (ms >= h) {
        return Math.round(ms / h) + "h";
      }
      if (ms >= m) {
        return Math.round(ms / m) + "m";
      }
      if (ms >= s) {
        return Math.round(ms / s) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      return plural(ms, d, "day") || plural(ms, h, "hour") || plural(ms, m, "minute") || plural(ms, s, "second") || ms + " ms";
    }
    function plural(ms, n, name) {
      if (ms < n) {
        return;
      }
      if (ms < n * 1.5) {
        return Math.floor(ms / n) + " " + name;
      }
      return Math.ceil(ms / n) + " " + name + "s";
    }
  }
});

// node_modules/basic-timer/lib/index.js
var require_lib = __commonJS({
  "node_modules/basic-timer/lib/index.js"(exports, module) {
    var isNode = require_browser();
    var ms = require_ms();
    module.exports = Timer;
    function Timer() {
      if (!(this instanceof Timer))
        return new Timer();
    }
    Timer.prototype.start = function() {
      isNode ? this.startTime = process.hrtime() : this.startTime = performance.now();
    };
    Timer.prototype.stop = function() {
      var startTime = this.startTime;
      var stopTime;
      isNode ? stopTime = process.hrtime(startTime)[1] / 1e6 : stopTime = performance.now();
      return stopTime;
    };
  }
});

// dep:basic-timer
var basic_timer_default = require_lib();
export {
  basic_timer_default as default
};
//# sourceMappingURL=basic-timer.js.map
